{const a=(a=new Map,b={get:(b)=>a.get(b),set(c,d){return(a.has(c)?a:a.set(c,new Set)).get(c).add(d),b},del(c,d){return a.has(c)&&1>a.get(c).delete(d).size&&a.delete(c),b},has(b,c){const d=a.has(b);return c!==void 0&&d?a.get(b).has(c):d},each(c,d){return b.has(c)&&a.get(c).forEach(d),b}})=>b,b=(a,b=!0)=>new Proxy(a,{get(c,d){return b&&Reflect.has(a,d)?Reflect.get(a,d):a.bind(null,d)}}),c=(a,...b)=>new Promise((c,d)=>{try{c(a(...b))}catch(a){d(a)}}),d=(a,...b)=>(b.forEach((b)=>{a=Object.assign(a,b)}),a),e=()=>{const d=a(),e=(a,b)=>(b.off=()=>d.del(a,b),b.once=()=>(b.off(),g(a,b)),b.on=()=>(b.off(),f(a,b)),b),f=b((a,b)=>(d.set(a,b),e(a,b))),g=b((a,b)=>{const c=(...e)=>(d.del(a,c),b(...e));return d.set(a,c),e(a,c)}),h=b((a,...b)=>{d.each(a,(a)=>a(...b))},!1),i=b((a,...b)=>{c(d.each,a,(a)=>c(a,...b))},!1);return{emit:h,emitAsync:i,on:f,once:g,listen:(a,b,c)=>(a?g:f)(b,c)}};var SuperModel=(a={},b=new Map)=>{const c=e(),{emit:f,emitAsync:g,on:h,once:i,listen:j}=c,k=(a)=>{b.delete(a),f('delete',a),f('delete:'+a)},l=(a)=>b.has(a),m=(a,c)=>{if(a&&a.constructor===Object){for(let b in a)m(b,a[b]);return m}const d=b.get(a);return void 0!==c&&c!==d?(b.set(a,c),f('set',a,c),f('set:'+a,c),m):(f('get',a),f('get:'+a),d)};m(a);const n=new Map,o=(a,c,d=c)=>(n.has(a)||n.set(a,new Map),n.get(a).set(d,h('set:'+d,(b)=>{a[c]=b})),b.has(c)&&(a[c]=b.get(c)),a);o.stop=(a,b)=>{if(l(a)){const c=n.get(a);b?c.has(b)&&(c.get(b).off(),c.delete(b)):c.forEach((a)=>a.off()).clear(),c.size||n.delete(a)}return a};const p=new Proxy((a,c)=>{l(a)?c(b.get(a)):i('set:'+a,c)},{get:(a,c)=>new Promise((a)=>{l(c)?a(b.get(c)):i('set:'+c,a)}),set(a,b,c){c.then(m.bind(null,b))}});return new Proxy(d(m,{has:l,store:b,sync:o,syncs:n,del:k},c),{get(a,b){return Reflect.has(a,b)?Reflect.get(a,b):'async'===b?p:m(b)},set(a,b,c){return c&&c.constructor===Promise?p[b]=c:m(b,c)},delete:(a,b)=>k(b)})};SuperModel.runAsync=c,SuperModel.listMap=a,SuperModel.emitter=e}