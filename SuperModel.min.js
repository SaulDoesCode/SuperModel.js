{const a=(a)=>(...b)=>new a(...b),b=a(Map),c=a(Set),d=a(Proxy),e=a(Promise),f=(a=b(),d={get:(b)=>a.get(b),set(b,e){return(a.has(b)?a:a.set(b,c())).get(b).add(e),d},del(b,c){return a.has(b)&&1>a.get(b).delete(c).size&&a.delete(b),d},has(b,c){const d=a.has(b);return c!==void 0&&d?a.get(b).has(c):d},each(b,c){return d.has(b)&&a.get(b).forEach(c),d}})=>d,g=(a,b=!0)=>d(a,{get(c,d){return b&&Reflect.has(a,d)?Reflect.get(a,d):a.bind(null,d)}}),h=(a,...b)=>e((c,d)=>{try{c(a(...b))}catch(a){d(a)}}),i=(a,...b)=>(b.forEach((b)=>{a=Object.assign(a,b)}),a),j=()=>{const a=f(),b=(b,e)=>(e.off=()=>a.del(b,e),e.once=()=>(e.off(),d(b,e)),e.on=()=>(e.off(),c(b,e)),e),c=g((c,d)=>(a.set(c,d),b(c,d))),d=g((c,d)=>{const e=(...b)=>(a.del(c,e),d(...b));return a.set(c,e),b(c,e)}),e=g((b,...c)=>{a.each(b,(a)=>a(...c))},!1),i=g((b,...c)=>{h(a.each,b,(a)=>h(a,...c))},!1);return{emit:e,emitAsync:i,on:c,once:d,listen:(a,b,e)=>(a?d:c)(b,e)}};var SuperModel=(a={},c=b())=>{const f=j(),{emit:g,emitAsync:h,on:k,once:l,listen:m}=f,n=(a)=>{c.delete(a),g('delete',a),g('delete:'+a)},o=(a)=>c.has(a),p=(a,b,d)=>{if(a&&a.constructor===Object){for(let b in a)p(b,a[b]);return p}const e=c.get(a);return void 0!==b&&b!==e?(c.set(a,b),d||(g('set',a,b),g('set:'+a,b)),p):(d||(g('get',a),g('get:'+a)),e)};p(a);const q=b(),r=(a,d,e=d)=>(q.has(a)||q.set(a,b()),q.get(a).set(e,k('set:'+e,(b)=>{a[d]=b})),c.has(d)&&(a[d]=c.get(d)),a);r.stop=(a,b)=>{if(o(a)){const c=q.get(a);b?c.has(b)&&(c.get(b).off(),c.delete(b)):c.forEach((a)=>a.off()).clear(),c.size||q.delete(a)}return a};const s=d((a,b)=>{o(a)?b(c.get(a)):l('set:'+a,b)},{get:(a,b)=>e((a)=>{o(b)?a(c.get(b)):l('set:'+b,a)}),set(a,b,c){c.then(p.bind(null,b))}}),t=b(),u=(a)=>{const b=c.has(a)&&t.has(a)&&t.get(a)(c.get(a));return h('validate:'+a,b),h('validate',a,b),b},v=d((a,b)=>{if(b===void 0)return u(a);if(b instanceof RegExp){const a=b;b=(b)=>'string'==typeof b&&a.test(b)}b instanceof Function&&t.set(a,b)},{get:(a,b)=>u(b),set:(a,b,c)=>a(b,c)});return d(i(p,{has:o,store:c,sync:r,syncs:q,del:n},f),{get(a,b){if(Reflect.has(a,b))return Reflect.get(a,b);return'async'===b?s:'valid'===b?v:p(b)},set(a,b,c){return c&&c.constructor===Promise?s[b]=c:p(b,c)},delete:(a,b)=>n(b)})};SuperModel.runAsync=h,SuperModel.listMap=f,SuperModel.emitter=j}